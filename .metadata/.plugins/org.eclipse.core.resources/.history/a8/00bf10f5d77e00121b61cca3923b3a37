import java.security.NoSuchAlgorithmException;

import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;

public class Test {

	public static void main(String[] args) {
		
		//generate a key using Java's built-in methods
		KeyGenerator keyGen = null;
		try {
			keyGen = KeyGenerator.getInstance("AES");
		} catch (NoSuchAlgorithmException e1) {
			e1.printStackTrace();
		}
		keyGen.init(256); //set the size of the key (can be changed)
		SecretKey keyObj = keyGen.generateKey();
		byte[] key = keyObj.getEncoded();

		AES test = null;
		try {
			test = new AES(key);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		int[][] state = //plantext
			{{0x00, 0x44, 0x88, 0xcc},
			 {0x11, 0x55, 0x99, 0xdd},
			 {0x22, 0x66, 0xaa, 0xee},
			 {0x33, 0x77, 0xbb, 0xff}, {0x00, 0x44, 0x88, 0xcc},
			 {0x11, 0x55, 0x99, 0xdd},
			 {0x22, 0x66, 0xaa, 0xee},
			 {0x33, 0x77, 0xbb, 0xff}};
		 
		 byte[] test1 = intToByte(state);
		 byte[] n = test.encrypt(test1);
		 test.decrypt(n);

	}
	
	/*
	 * Prints a byte array in human readable form. Only used for checking.
	 * @param byte[] words the array to print
	 */
	private static void PrintArray(byte[] words) 
	{
		for (int i = 0; i < words.length; i++)
		{
				System.out.print(Integer.toHexString((words[i] & 0xFF)) + " ");
		}
	}

}
